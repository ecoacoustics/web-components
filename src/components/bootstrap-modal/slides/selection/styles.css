@import url("./animations.css");

.selection-slide {
  .cursor {
    animation: selection-cursor-movement var(--animation-duration) infinite;
    will-change: transform;

    .click-animation {
      animation: selection-cursor-clicks var(--animation-duration) infinite;
    }
  }

  .highlight-box {
    position: absolute;
    display: inline-block;

    left: 222px;
    top: 9.5%;

    animation: selection-highlight-box-animation var(--animation-duration) infinite;
  }

  .grid-tile {
    /*
      Because selection is a boolean event, we want our animation timing
      function to immediately applies the fill color to the grid tile without
      any transition.
    */
    animation-timing-function: step-start;
  }

  .tile-0 {
    animation: selection-tile-0-decisions var(--animation-duration) infinite;

    .grid-tile-background {
      animation: selection-tile-0 var(--animation-duration) infinite;
    }
  }

  .tile-1 {
    animation: selection-tile-1-decisions var(--animation-duration) infinite;

    .grid-tile-background {
      animation: selection-tile-1 var(--animation-duration) infinite;
    }
  }

  .tile-2 {
    animation: selection-tile-2-decisions var(--animation-duration) infinite;

    .grid-tile-background {
      animation: selection-tile-2 var(--animation-duration) infinite;
    }
  }

  .tile-3 {
    animation: selection-tile-3-decisions var(--animation-duration) infinite;

    .grid-tile-background {
      animation: selection-tile-3 var(--animation-duration) infinite;
    }
  }

  .tile-4 {
    animation: selection-tile-4-decisions var(--animation-duration) infinite;

    .grid-tile-background {
      animation: selection-tile-4 var(--animation-duration) infinite;
    }
  }
}
